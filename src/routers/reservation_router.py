from fastapi import APIRouter, HTTPException

from dependencies.service_depend import reservation_service
from schemas.reservation_schemas import ReservationPostSchema, ReservationGetSchema

reservation_router = APIRouter(prefix='/reservations', tags=['–ë—Ä–æ–Ω—å',])

"""
GET /reservations/ ‚Äî —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±—Ä–æ–Ω–µ–π
POST /reservations/ ‚Äî —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –±—Ä–æ–Ω—å
DELETE /reservations/{id} ‚Äî —É–¥–∞–ª–∏—Ç—å –±—Ä–æ–Ω—å
"""


@reservation_router.get('/', summary='—Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±—Ä–æ–Ω–µ–π*Ô∏è‚É£')
async def get_all_reservations(service: reservation_service) -> list[ReservationGetSchema] | dict:
    try:
        res = await service.get_all_reservations()
        if res:
            return res
        else:
            return {"ok": True, 'detail': '–ù–∏ –æ–¥–∏–Ω —Å—Ç–æ–ª–∏–∫ –µ—â–µ –Ω–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω.'}
    except:
        raise HTTPException(status_code=500, detail='Server Error')


@reservation_router.post('/', summary="–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫üñä")
async def create_reservation(reservation: ReservationPostSchema, service: reservation_service):
    try:
        res = await service.create_reservation(reservation)
        if res:
            return {'ok': True, "detail": '–°—Ç–æ–ª–∏–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω.'}
        else:
            return {'ok': False, "detail": '–ü—Ä–∏ –±—Ä–æ–Ω–∏ —Å—Ç–æ–ª–∏–∫–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. '
                                           '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å—Ç–æ–ª–∏–∫ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º id'}
    except:
        raise HTTPException(status_code=500, detail='Server Error')


@reservation_router.delete('/{id}', summary='–°–Ω—è—Ç—å –±—Ä–æ–Ω—å‚ùå')
async def delete_reservation(id: int, service: reservation_service):
    try:
        res = await service.delete_reservation(id)
        if res:
            return {'ok': True, "detail": f'–ë—Ä–æ–Ω—å c id {id} —É—Å–ø–µ—à–Ω–æ —Å–Ω—è—Ç–∞.'}
        else:
            return {'ok': False, "detail": '–ü—Ä–∏ —Å–Ω—è—Ç–∏–∏ –±—Ä–æ–Ω–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞'}
    except:
        raise HTTPException(status_code=500, detail='Server Error')